.default.buttons{
    margin-top:25px;
    margin-left:25px;
}

.default.button.fa.fa-adjust::before {
  content: "ðŸŒ“";
}

.default.button.fa.fa-fast-backward::before {
    content: "Â«Â«";
}

.default.button.fa.fa-step-backward::before {
  content: "Â«";
}

.default.button.fa.fa-step-forward::before {
  content: "Â»";
}

.default.button.fa.fa-play-circle::before {   
    content: "â–º";
}

.default.button.fa.fa-fast-forward::before{
content: "Â»Â»";
}

/*
 * Chessground base css properties.
 *
 * You need to include the css files in themes folder in order to have the
 * board and pieces displayed!
 */

.cg-board-wrap {
  width: 320px;
  height: 320px;
  position: relative;
  display: block;
}
.cg-board {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  user-select: none;
  line-height: 0;
  background-size: cover;
  cursor: pointer;
}
.cg-board square {
  position: absolute;
  top: 0;
  left: 0;
  width: 12.5%;
  height: 12.5%;
}

.cg-board square.last-move {
  will-change: transform;
  background-color: rgba(155, 199, 0, 0.41);
}
.cg-board square.selected {
  background-color: rgba(20, 85, 30, 0.5);
}
.cg-board square.check {
  background: radial-gradient(ellipse at center, rgba(255, 0, 0, 1) 0%, rgba(231, 0, 0, 1) 25%, rgba(169, 0, 0, 0) 89%, rgba(158, 0, 0, 0) 100%);
}
.cg-board square.current-premove {
  background-color: rgba(20, 30, 85, 0.5);
}
.cg-board piece {
  position: absolute;
  top: 0;
  left: 0;
  width: 12.5%;
  height: 12.5%;
  background-size: cover;
  z-index: 2;
  will-change: transform;
}
.cg-board piece.dragging {
  cursor: move;
  z-index: 9;
}
.cg-board piece.anim {
  z-index: 8;
}
.cg-board piece.fading {
  z-index: 1;
  opacity: 0.5;
}
.cg-board-wrap div.over {
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(20, 85, 30, 0.3);
}
.cg-board-wrap piece.ghost {
  opacity: 0.3;
}
.cg-board-wrap svg {
  overflow: hidden;
  position: relative;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2;
  opacity: 0.6;
}
.cg-board-wrap svg image {
  opacity: 0.5;
}
.cg-board-wrap coords {
  position: absolute;
  display: flex;
  pointer-events: none;
  opacity: 0.8;
  /* font-size: 9px; unset to allow different sizing ... */
}
.cg-board-wrap coords.ranks {
  right: -15px;
  top: 0;
  flex-flow: column-reverse;
  height: 100%;
  width: 12px;
}
.cg-board-wrap coords.ranks.black {
  flex-flow: column;
}
.cg-board-wrap coords.files {
  bottom: -16px;
  left: 0;
  flex-flow: row;
  width: 100%;
  height: 16px;
  text-transform: uppercase;
  text-align: center;
}
.cg-board-wrap coords.files.black {
  flex-flow: row-reverse;
}
.cg-board-wrap coords coord {
  flex: 1 1 auto;
}
.cg-board-wrap coords.ranks coord {
  transform: translateY(39%);
}
/*
 * Board
 */

.zeit .cg-board-wrap {
  background-image: url(images/board/zeit.svg);
}

/*
 * Board
 */
.merida .cg-board piece.pawn.white {
  background-image: url('images/pieces/merida/wP.svg');
}
.merida .cg-board piece.bishop.white {
  background-image: url('images/pieces/merida/wB.svg');
}
.merida .cg-board piece.knight.white {
  background-image: url('images/pieces/merida/wN.svg');
}
.merida .cg-board piece.rook.white {
  background-image: url('images/pieces/merida/wR.svg');
}
.merida .cg-board piece.queen.white {
  background-image: url('images/pieces/merida/wQ.svg');
}
.merida .cg-board piece.king.white {
  background-image: url('images/pieces/merida/wK.svg');
}
.merida .cg-board piece.pawn.black {
  background-image: url('images/pieces/merida/bP.svg');
}
.merida .cg-board piece.bishop.black {
  background-image: url('images/pieces/merida/bB.svg');
}
.merida .cg-board piece.knight.black {
  background-image: url('images/pieces/merida/bN.svg');
}
.merida .cg-board piece.rook.black {
  background-image: url('images/pieces/merida/bR.svg');
}
.merida .cg-board piece.queen.black {
  background-image: url('images/pieces/merida/bQ.svg');
}
.merida .cg-board piece.king.black {
  background-image: url('images/pieces/merida/bK.svg');
}


div.whole:focus {
    /* The following suppresses the outline of the element that has the focus. Only when
       that focus is set, the keyboard mappings work. You may of course enable the outline
       for debugging purposes. */
    outline: 0;
}

span.whiteHeader:before {
    content: " White: ";
}

span.blackHeader:before {
    content: " Black: ";
}

span.restHeader:before { content: " ("}
span.restHeader:after { content: ")"}

div.layout-left.whole, div.layout-right.whole {
    display: flex;
    flex-flow: row wrap;
}

div.layout-left > .headers, div.layout-right > headers {
    flex: 1 100%;
}

div.moves {
    /* overflow-y: auto; */
    padding: 10px;
}

div.layout-left > .moves, div.layout-right > .moves {
    position: relative;
    flex: 1 40%;
}

div.layout-left > .moves, div.layout-right > .moves, div.layout-top > .moves, div.layout-bottom > .moves {
    overflow-y: auto;
}

div.layout-right > .moves {
    order: 1;
}

div.layout-right > .outerBoard {
    order: 2;
    /* flex: 1 1 auto; */
}

div.layout-bottom.whole {
    display: flex;
    flex-flow: column wrap;
}

div.layout-bottom > .outerBoard {
    order: 2;
}

div.layout-top-left > .outerBoard {
    float: left;
    margin-right: 10px;
}

div.layout-bottom-left > .outerBoard {
    float: left;
    margin-right: 10px;
    /* display: table-cell;
    vertical-align: bottom; */
}

div.layout-top-right > .outerBoard {
    float: right;
    margin-left: 10px;
}

/* Not found any trick that allows to use baseline, bottom, ... with float: left|right */
div.layout-bottom-right > .outerBoard {
    float: right;
    margin-left: 10px;
}

div.layout-left > .outerBoard div.edit .gray, div.buttons .gray {
    filter: grayscale(100%);
}

div.error {
    color: red;
}
div.buttons > i.button, div.edit > i.button {
    font-size: 16px;
    line-height: 1.4em;
    color: #71a0df;
    background-color: white;
    background-image: none;
     margin: 5px;
    padding: 4px;
    border: solid lightgrey 1px;
    border-radius: 4px;
}

div.buttons > i.button.selected, div.edit > i.button.selected, .nagMenu.selected {
    color: #fff;
    background-color: #71a0df;
}

div.nagMenu {
    border: 1px grey dotted;
    display: none;
    width: 600px;
}

div.nagMenu a {
    text-decoration: none;
}

div.nagMove, div.nagObservation, div.nagPosition {
    display: flex;
    flex-direction: column;
    flex-basis: 33.3%;
    text-align: left;
    flex-wrap: wrap;
}

.nagMove i, .nagPosition i, .nagObservation i {
    display: flex!important;
    cursor: pointer;
    transition: 0.13s;
    align-items: center;
    margin: 2px;
}

.nagMove i::before, .nagPosition i::before, .nagObservation i::before {
    content: attr(data-symbol);
    /* font-size: 1.2em; */
    font-style: normal;
    font-weight: bold;
    display: block;
    width: 30px;
    text-align: center;
    background: #f3f3f3;
    padding: 2px 2px;
    margin-right: 6px;
    transition: 0.13s;
}

a.active i::before {
    background: #71a0df!important;
    color: #fff!important;
}

.nagMove i:hover, .nagPosition i:hover, .nagObservation i:hover {
    background: #efefef;
    color: #71a0df;
}

select.nag {
    width: 80px;
}


div.buttons > i.button:hover,div.edit > i.button:hover  {
    cursor: pointer;
    border: solid dimgrey 1px;
}

textarea.pgn {
    padding: 2px;
    border: 1px solid grey;
    width: 96%;
    height: 100px;
    font-family: monospace;
}


div.commentRadio label {
    display: inline;
}
div.comment > textarea.comment {
    font-family: monospace;
    width: 96%;
    height: 50px;
    padding: 2px;
}

.moves a {
    text-decoration: underline;
}

.moves .move a.yellow {
    background-color: rgba(255, 255, 153, 1.0);
}

.moves .move a {
    text-decoration: none;
    border: 1px solid transparent;
}

.moves .move a:hover {
    border: 1px yellow dotted;
    background-color: rgba(255, 255, 153, 1.0);
    cursor: crosshair;
}

.moves .move {
    font-size: 16px;
    font-family: Georgia, "Bitstream Charter", serif;;
    color: black;
    font-weight: 700;
    line-height: 24px;
}

.moves .move.var {
    font-weight: 500;
}

.moves .variation {
    font-size: 100%;
    display: block;
    padding: 5px;
}
.moves .variation:before {
    content: ' ( ';
}

.moves .variation .variation:before {
    content: ' ( ';
}

.moves .variation .variation {
    font-size: 90%;
    padding-left: 10px;
    padding-right: 10px;
}

.moves .variation .variation:after {
    content: ' ) ';
}

.moves .variation:after {
    content: ' ) ';
}

.moves > .varblock .white:before {
    display: inline;
}

.moves .move .comment {
    color: green;
    font-weight: 500;
}

.moves .white:before {
    content: '\A';
    display: inline-block;
}

.moves {
    /*  position: relative;
    overflow-y: auto;*/
    padding: 10px;
}


/**
  CHESSGROUND changes.
  */
 
.cg-board-wrap.coords-inner {
    margin-bottom: 0px;
    margin-right: 0px;
}
.cg-board-wrap {
    margin-bottom: 15px;
    margin-right: 15px;
}
.cg-board-wrap.coords-inner coords.ranks {
    right: -2px;
}
.cg-board-wrap.coords-inner coords.files {
    bottom: 2px;
    left: 2px;
    text-align: left;
}
.cg-board-wrap coords.files {
    text-transform: none;
}

.colorMarker {
    width: 20px; height: 20px;
    border-color: black;
    border-width: 2px;
    border-style: double;
    margin: 10px;
    /*order: 1; */
}

.colorMarker.circle {
    border-radius: 10px;
}

.colorMarker.circle-big {
    border-radius: 20px;
    width: 40px; height: 40px;
}

.colorMarker.circle-small {
    border-radius: 5px;
    width: 10px; height: 10px;
}

.cm-black {
    background-color: black;
}

.cm-white {
    background-color: white;
}

.cm-big {
    width: 40px; height: 40px;   
}

.cm-small {
    width: 10px; height: 10px;
}
